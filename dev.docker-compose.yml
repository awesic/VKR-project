version: '3.8'

services:
  nginx:
    restart: unless-stopped
    container_name: fqw_nginx
    build: 
      context: .
      dockerfile: ./Dockerfile.nginx
    ports:
      - 80:80
    volumes:
      - ./backend/django_static:/app/backend/server/django_static
      - ./nginx/development:/etc/nginx/conf.d

  rmq:
    image: rabbitmq::3.10-management
    restart: always
    container_name: fqw_rmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RMQ_PASS}
    volumes:
      - rabbitmq_data_volume:/var/lib/rabbitmq/
    ports:
      - 1234:15672
      - 5671-5672:5671-5672
    env_file:
      - ./.env


  back:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/usr/src/config
    ports:
      - "8000:8000"
    env_file:
      - ./.env

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    env_file:
      - .env

#  frontend:
#    image: nginx
#    container_name: frontend

volumes:
  postgres_data:
  rabbitmq_data_volume: {}
  static_volume: {}